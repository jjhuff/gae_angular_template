Total: 308 samples
      51  16.6%  16.6%      111  36.0% runtime.mallocgc
      21   6.8%  23.4%       22   7.1% settype
      19   6.2%  29.5%       19   6.2% scanblock
      18   5.8%  35.4%       19   6.2% runtime.MSpan_Sweep
      18   5.8%  41.2%       26   8.4% runtime.mapaccess1_faststr
      16   5.2%  46.4%       16   5.2% ExternalCode
      12   3.9%  50.3%      143  46.4% github.com/ant0ine/go-json-rest/rest/trie.(*node).find
      11   3.6%  53.9%       19   6.2% net/url.escape
       9   2.9%  56.8%       45  14.6% hash_insert
       8   2.6%  59.4%       60  19.5% cnew
       8   2.6%  62.0%        8   2.6% net/url.shouldEscape
       7   2.3%  64.3%        9   2.9% hash_init
       7   2.3%  66.6%       13   4.2% strings.genSplit
       6   1.9%  68.5%       21   6.8% runtime.growslice
       6   1.9%  70.5%        6   1.9% runtime.memclr
       5   1.6%  72.1%       93  30.2% github.com/ant0ine/go-json-rest/rest/trie.funcÂ·002
       5   1.6%  73.7%        5   1.6% runtime.markscan
       5   1.6%  75.3%       51  16.6% runtime.new
       4   1.3%  76.6%      189  61.4% github.com/ant0ine/go-json-rest/rest/trie.(*Trie).FindRoutesAndPathMatched
       4   1.3%  77.9%        4   1.3% github.com/ant0ine/go-json-rest/rest/trie.splitParam
       4   1.3%  79.2%       15   4.9% growslice1
       4   1.3%  80.5%       37  12.0% makemap_c
       4   1.3%  81.8%        4   1.3% runtime.mapaccess1_fast32
       4   1.3%  83.1%        4   1.3% runtime.markspan
       4   1.3%  84.4%       17   5.5% strings.SplitN
       3   1.0%  85.4%       21   6.8% MCentral_Grow
       3   1.0%  86.4%        4   1.3% assertE2Tret
       3   1.0%  87.3%       26   8.4% github.com/ant0ine/go-json-rest/rest.(*router).ofFirstDefinedRoute
       3   1.0%  88.3%        3   1.0% markonly
       3   1.0%  89.3%        3   1.0% runtime.memeqbody
       3   1.0%  90.3%        3   1.0% runtime.memhash
       2   0.6%  90.9%        2   0.6% flushptrbuf
       2   0.6%  91.6%      260  84.4% github.com/ant0ine/go-json-rest/rest.(*router).findRouteFromURL
       2   0.6%  92.2%      263  85.4% github.com/ant0ine/go-json-rest/rest.BenchmarkCompression
       2   0.6%  92.9%       39  12.7% github.com/ant0ine/go-json-rest/rest.escapedPath
       2   0.6%  93.5%        2   0.6% runtime.duffcopy
       2   0.6%  94.2%        2   0.6% runtime.fastrand1
       2   0.6%  94.8%        6   1.9% runtime.makeslice
       2   0.6%  95.5%        2   0.6% runtime.memcopy32
       2   0.6%  96.1%        2   0.6% runtime.memeq
       1   0.3%  96.4%        1   0.3% bgsweep
       1   0.3%  96.8%       20   6.5% net/url.(*URL).RequestURI
       1   0.3%  97.1%       24   7.8% runtime.cnew
       1   0.3%  97.4%        1   0.3% runtime.findfunc
       1   0.3%  97.7%        1   0.3% runtime.funcspdelta
       1   0.3%  98.1%        1   0.3% runtime.lock
       1   0.3%  98.4%        1   0.3% runtime.nanotime
       1   0.3%  98.7%        1   0.3% runtime.strcopy
       1   0.3%  99.0%        4   1.3% runtime.strhash
       1   0.3%  99.4%        1   0.3% runtime.stringiter2
       1   0.3%  99.7%        1   0.3% runtime.xadd
       1   0.3% 100.0%        1   0.3% scanbitvector
       0   0.0% 100.0%       28   9.1% GC
       0   0.0% 100.0%        1   0.3% MCentral_ReturnToHeap
       0   0.0% 100.0%       10   3.2% MHeap_AllocLocked
       0   0.0% 100.0%        1   0.3% MHeap_FreeLocked
       0   0.0% 100.0%       10   3.2% MHeap_Reclaim
       0   0.0% 100.0%       16   5.2% System
       0   0.0% 100.0%        1   0.3% clearpools
       0   0.0% 100.0%        1   0.3% concatstring
       0   0.0% 100.0%        1   0.3% copyout
       0   0.0% 100.0%        1   0.3% github.com/ant0ine/go-json-rest/rest.(*router).start
       0   0.0% 100.0%        1   0.3% github.com/ant0ine/go-json-rest/rest/trie.(*Trie).Compress
       0   0.0% 100.0%       67  21.8% github.com/ant0ine/go-json-rest/rest/trie.(*findContext).paramsAsMap
       0   0.0% 100.0%        1   0.3% github.com/ant0ine/go-json-rest/rest/trie.(*node).compress
       0   0.0% 100.0%        1   0.3% gostringsize
       0   0.0% 100.0%        4   1.3% makeslice1
       0   0.0% 100.0%       31  10.1% runtime.MCache_Refill
       0   0.0% 100.0%       31  10.1% runtime.MCentral_CacheSpan
       0   0.0% 100.0%        1   0.3% runtime.MCentral_FreeSpan
       0   0.0% 100.0%       14   4.5% runtime.MHeap_Alloc
       0   0.0% 100.0%        1   0.3% runtime.MHeap_Free
       0   0.0% 100.0%        4   1.3% runtime.assertE2T
       0   0.0% 100.0%        1   0.3% runtime.call16
       0   0.0% 100.0%       37  12.0% runtime.cnewarray
       0   0.0% 100.0%        1   0.3% runtime.concatstring2
       0   0.0% 100.0%        1   0.3% runtime.gc
       0   0.0% 100.0%      264  85.7% runtime.gosched0
       0   0.0% 100.0%       37  12.0% runtime.makemap
       0   0.0% 100.0%       45  14.6% runtime.mapassign1
       0   0.0% 100.0%       10   3.2% runtime.sweepone
       0   0.0% 100.0%        1   0.3% strings.Map
       0   0.0% 100.0%        1   0.3% strings.ToUpper
       0   0.0% 100.0%        1   0.3% sync.poolCleanup
       0   0.0% 100.0%      263  85.4% testing.(*B).launch
       0   0.0% 100.0%      263  85.4% testing.(*B).runN
